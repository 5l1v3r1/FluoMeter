%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 16.0.4%%For: (Scheibler) ()%%Title: (Prototype_4.0_enclosure_3mm.ai)%%CreationDate: 06.01.16 22:15%%Canvassize: 16383%%BoundingBox: 18 93 351 580%%HiResBoundingBox: 18.4463 93.9648 350.7139 579.5122%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 296.7813 421.5 296.7813%AI3_TileBox: 24.9448 -8.35938 816.9453 603.6411%AI3_DocumentPreview: None%AI5_ArtSize: 841.8896 595.2803%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 6%AI8_OpenToView: -32 698.6152 1.5 2560 1398 18 1 0 -2 38 0 0%AI5_OpenViewLayers: 777776%%PageOrigin:208 85%AI7_GridSettings: 28.3465 20 28.3465 20 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 88 128 8%%BeginData: 7538 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FD05FFA8FFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8%FD29FFA8FD5AFFA8FD29FFA8A8FD09FFA8FD07FFA8FD0FFFA8FFA8FD05FF%A8FFFFFFA8FD07FFA8FFA8FD05FFA8FFA8FD0FFFA8FFA8FD0EFFA8FD07FF%A8FD13FFA8FFCAFD05FFA8FD2AFFA8FD21FFA8FFFFFFCACBCAFFA8FFFFFF%A8FD07FFA8FFA8FD05FFA8FFA8FD0FFFA8FFA8FD0EFFA8FFA8FD05FFA8FF%A8FD0FFFA8FFA8FFC4CBFD2AFFCAFFCAFFA8A8FD09FFA8FD07FFA8FD11FF%A8FFCACAA8FFA8FD0DFFA8FD05FFA8FFA8FD0FFFA8FFA8FFA8FD1AFFA8FD%0FFFC4CBFD0AFFA8FD17FFA8FD07FFCACACAFFA8A8FFFFFFA8FFFFFFA8FD%0DFFA8FFA8FD0DFFCACAA1FFA8FD07FFA8FFA8FD15FFA8FFA8FD06FFCAA2%FD08FFA8FD11FFA8FD0FFFCAFD05FFA8FD1DFFA8FD08FFCAC4FFA8A8FD05%FFA8FD1FFFA8CACAFFA8FFFFFFA8FFFFFFA8FFA8FD1FFFA8CACAFD06FFA8%FD13FFA8FFFFFFA8FD09FFC4CBFD04FFA8FD26FFCACAFFFFA8FD1DFFA8FD%07FFCACACAFFA8FFFFFFA8FFFFFFA8FFA8FD11FFA8FFA8A8FD0AFFCBFD0A%FFA8FD4BFFCACACAFFA8A8FFFFFFA8FFFFFFA8FD0FFFA8FD0DFFCACAA8FF%A8FD07FFA8FFA8FD11FFA8FFFFFFA8FD09FFA2CACAFD08FFA8FD11FFA8FF%FFFFA8FD09FFCAFD1FFFA8FFA8FD0AFFCACAFFA8A8FFFFFFA8FFA8A8FD12%FFA8FFA8FD0AFFCAA8FFA8FD07FFA8FFA8FD13FFA8FD0BFFA1CBFD29FFC3%CBFD04FFA8FD26FFCBCAFFA8A8FD05FFA8FD17FFA8FFA8FD05FFCACACAFF%A8FFFFFFA8FFFFFFA8FFA8FD0DFFA8FFA8FD0FFFA1CAFD07FFA8FD17FFA8%FD09FFCAFD05FFA8FD17FFA8FD0EFFC4CAFFFFA8FD05FFA8FD17FFA8FD07%FFCAC4CAFFA8FFFFFFA8FFFFFFA8FD11FFA8FD0FFFC3CAFD0DFFA8FD07FF%A8FD0FFFA8FFFFFFC3CAFD0EFFA8FD07FFA8FD11FFA8FFCBCACAFFA8A8FD%09FFA8FFA8FFFFFFA8FFFFFFA8FD0FFFA8FFCACAA1FFA8FD0BFFA8FFA8FD%05FFA8FFA8FD0FFFA8FFA8FFA8CAFD0DFFA8FD07FFA8FD0FFFA8FFCACBCA%FD2FFFA8A8FD0BFFA8FFFFFFA8FFFFFFA8FD12FFCACAFFA8FD0BFFA8FFA8%FD05FFA8FFA8FD0FFFA8FFA8FD0EFFA8FFA8FD05FFA8FFA8FD0FFFA8FFA8%FD07FFA8FD09FFA8FD19FFA8FD05FFA8A8FD09FFA8FD07FFA8FD11FFA8FD%05FFA8FFFFFFA8FD0FFFA8FD46FFA8FD2AFFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FDB4FFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FD06FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FD5DFFA8FD2FFFA8FD1BFFA8FFA8FFFFFFA8FFA8FFFFA8FD4D%FFA8FFA8FFFFFFA8FFFFA8FD2FFFA8FFA8FD1BFFA8FD07FFA8FD38FFCAFD%20FFA8FFA8FD2DFFA8FFA8FFFFFFA8CAA8FD15FFA8A8A8FFFFFFA8FFA8FD%37FFCACAFD22FFA8FD19FFA8FD19FFC4CACAFFFFFFCAFFCACACAFD13FFA8%FD20FFA8FD18FFCBCAFFFFFFCACBCAFFCACACAFFCBFD16FFA8FD15FFA8FF%A8FD05FFA8FD15FFA2CAFFFFA8CBA2CAA1CACAFFA8CAA2FD0FFFA8FD38FF%CBCBCAFFCAFFCACAC4CBCACBCAFFCAFFCACBFD13FFA8FD1FFFA8FD13FFA2%CAFFCAA8FFCACAA8CBCACAA1CACACAA8CACAFD0BFFA8FD1AFFA8FD1EFFCA%CAFFCAFFCAFFCACBCAFFCACACAFFCACAA1FD04CAFD0EFFA8FD1FFFA8FD13%FFA1CAA8FFCACBA8FFCAFFA8FFCACAA8FFFFCBA8FFCACAA8FD07FFA8FD1A%FFA8FD1DFFCACAC3FD0DFFCAFFFFFFCAFD10FFA8FD1FFFA8FD12FFCACACB%CAFD0DFFCACACAFD0BFFA8FD24FFA8FD13FFCACACAFFCAFD20FFA8FD15FF%A8FD07FFA8FD15FFA2CAFFFFA8FD09FFCAFD0FFFA8FD1CFFA8FD1BFFCACB%FD23FFA8FD17FFA8FFA8FFA8FD17FFA8FD05FFCAFFCAFFCAFD13FFA8FD39%FFCBCAFD20FFA8FFA8FD2DFFA8FFA8FFFFFFA2CAFD16FFA8FFA8FFFFFFA8%FFA8FD30FFA8FD07FFCAFD19FFA8FD06FFA8FD31FFA8FD1BFFA8FD07FFA8%FD30FFA8FD21FFA8FD06FFA8FFA8FD2DFFA8FFA8FD1BFFA8FFA8FFFFFFA8%FFA8FD5BFFA8FD51FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FD08FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD5D%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD5DFFA8FD51%FFA8FD04FFA8FD2FFFA8FD23FFA8FFFFA8FD2FFFA8FFA8FD1BFFA8FFA8FD%05FFA8FD30FFA8FD28FFA8FD2FFFA8FFA8FD1BFFA8FFA8FD05FFA8FD50FF%A8FD0AFFA8FD2DFFA8FD1FFFA8FFFFFFA8FD20FFCFFD3CFFA8FD16FFCFA7%CFA8CFA7CFFD34FFA8FD1BFFCFCFFFFFFFA8FFCFCFFD39FFA8FD14FFCFA8%FD07FFA8CFFD32FFA8FD1AFFCFFD09FFCFFD38FFA8FD13FFCACFA8FD07FF%A8CFCFFD31FFA8FD19FFCFA8FD09FFCFFD38FFA8FD13FFCFCFA8FD07FFA8%CFCFFD31FFA8FD1AFFCFFD09FFCFFD38FFA8FD14FFCFA8FD07FFA8CFFD32%FFA8FD1BFFCFCFFD05FFCFCFFD39FFA8FD15FFCFCFA8FFA8CFA8CFFD34FF%A8FD1EFFCFFFCFFD3AFFA8FFA8FD2DFFA8FD1FFFA8FFFFFFA8FD32FFA8FD%1FFFA8FD08FFA8FD31FFA8FD1BFFA8FD07FFA8FD52FFA8FD06FFA8FFA8FF%CAFFA8FFCAFFA8CBFD24FFA8FFA8FD1BFFA8FFA8FD05FFA8FFFFA8FFFFFF%C4FD04CACBCACACAFD23FFA8FD23FFA8FD04FFA8FFCACAA2CAC4CAA2CAC4%CAFD46FFA8FD56FFA8FD06FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FD5FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0CFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFA8FD06FFA8FD13FFA8FD3DFFA8FD5BFFA8FFA8FD17FF%A8FD39FFA8FFA8FD1CFFA8FD1FFFA8FD1CFFA8FD1BFFA8FD1DFFA8FD1BFF%A8FD59FFA8FFA8FD51FFA8FFA8FD5BFFA8FD51FFA8FD5DFFA8FD17FFA8FF%A8FD37FFA8FD5DFFA8FD15FFA8FD3BFFA8FD22FFA8FD3AFFA8FD15FFA8FD%07FFA8FD33FFA8FD1CFFA8FD05FFA8FD3AFFA8FD17FFA8FFFFFFA8FD35FF%A8FD20FFA8FD3CFFA8FD51FFA8FD5DFFA8FD51FFA8FD04FFA8FD56FFA8FD%55FFA8FD59FFA8FD1BFFA8FD1DFFA8FD1BFFA8FFFFA8FFFFFFCAFFCBCBCA%FFFFFFCAFD0DFFA8FFA8FD1BFFA8FFA8FD19FFA8FD04FFA8FFCACAA1CAC4%C4A1CAC4CACAFD0DFFA8FD1DFFA8FD19FFA8FD08FFCAFFCAFFCACBCAFFCB%FD4CFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibraries.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer0 1 1 1 0 0 0 0 79 128 255 0 50 Lb(Dimensions) Ln0 ALB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 4 255 255 79 0 50 Lb(Etch 1mm) Ln0 ALB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 5 255 79 255 0 50 Lb(Etch 2mm) Ln0 ALB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 2 79 255 79 0 50 Lb(Cut 2mm) Ln0 ALB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Cut 3mm) Ln0 ALB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 3 79 79 255 0 50 Lb(Etch text) Ln0 Au1 Ap0 R0 0 0 1 K0 J 0 j 0.19216 w 10 M []0 d0 XR285.209 516.2646 m285.209 529.1621 L298.249 529.1621 L298.249 516.2646 L285.209 516.2646 Ls0 Ap0.2 w213.7197 547.0913 m211.2148 547.0913 209.1855 545.0601 209.1855 542.5562 c209.1855 540.0513 211.2148 538.02 213.7197 538.02 c216.2256 538.02 218.2549 540.0513 218.2549 542.5562 c218.2549 545.0601 216.2256 547.0913 213.7197 547.0913 Cs213.7197 507.4067 m211.2148 507.4067 209.1855 505.3755 209.1855 502.8716 c209.1855 500.3667 211.2148 498.3354 213.7197 498.3354 c216.2256 498.3354 218.2549 500.3667 218.2549 502.8716 c218.2549 505.3755 216.2256 507.4067 213.7197 507.4067 Cs305.9023 547.0913 m303.3975 547.0913 301.3672 545.0601 301.3672 542.5562 c301.3672 540.0513 303.3975 538.02 305.9023 538.02 c308.4072 538.02 310.4375 540.0513 310.4375 542.5562 c310.4375 545.0601 308.4072 547.0913 305.9023 547.0913 Cs277.5557 507.4067 m275.0508 507.4067 273.0215 505.3755 273.0215 502.8716 c273.0215 500.3667 275.0508 498.3354 277.5557 498.3354 c280.0605 498.3354 282.0918 500.3667 282.0918 502.8716 c282.0918 505.3755 280.0605 507.4067 277.5557 507.4067 Cs0.21166 w191.8682 466.0205 m191.8682 579.4063 L350.6084 579.4063 L350.6084 466.0205 l191.8682 466.0205 Ls0.16757 w226.1553 552.6377 m226.1553 559.7246 L226.1553 566.8105 L230.1348 566.8105 L234.1152 566.8105 L234.1152 559.7246 L234.1152 552.6377 L230.1348 552.6377 L226.1553 552.6377 Ls226.1553 478.6753 m226.1553 492.8481 L234.1152 492.8481 L234.1152 478.6753 l226.1553 478.6753 Ls0.176629 w322.4014 552.6377 m322.4014 559.7246 L322.4014 566.8105 L326.8223 566.8105 L331.2441 566.8105 L331.2441 559.7246 L331.2441 552.6377 L326.8223 552.6377 L322.4014 552.6377 Ls0.167565 w322.8428 478.6753 m322.8428 492.8481 L330.8027 492.8481 L330.8027 478.6753 l322.8428 478.6753 Ls0.167569 w255.3789 552.6377 m255.3789 559.7246 L255.3789 566.8105 L259.3584 566.8105 L263.3379 566.8105 L263.3379 559.7246 L263.3379 552.6377 L259.3584 552.6377 L255.3789 552.6377 Ls255.3789 478.6753 m255.3789 485.7622 L255.3789 492.8481 L259.3584 492.8481 L263.3379 492.8481 L263.3379 485.7622 L263.3379 478.6753 L259.3584 478.6753 L255.3789 478.6753 Ls1 Ap0.347521 w209.4688 511.4839 m209.4688 534.1606 L217.9727 534.1606 L217.9727 511.4839 L209.4688 511.4839 Lsu*u0 Ap0 0.972549 0.266667 0 K0.283465 w 4 M345.376 555.4878 m345.376 554.3218 L337.7939 554.3218 L337.7939 550.0034 L336.7686 550.0034 L336.7686 555.4878 l345.376 555.4878 Ls*U*u345.376 548.9546 m345.376 547.8823 L344.1807 547.8823 L344.1807 548.9546 l345.376 548.9546 Ls343.0146 548.9546 m343.0146 547.8823 L336.7686 547.8823 L336.7686 548.9546 l343.0146 548.9546 Ls*U*u342.792 542.8003 m342.6553 542.6011 342.4561 542.3989 342.1943 542.1929 c342.9854 542.1929 L342.9854 541.2202 L337.2783 541.2202 L336.4814 541.2202 335.8525 541.3374 335.3916 541.5708 c334.54 542.0063 334.1143 542.8296 334.1143 544.0405 c334.1143 544.7144 334.2656 545.2808 334.5684 545.7397 c334.8711 546.1997 335.3447 546.4565 335.9893 546.5112 c335.9893 545.439 L335.708 545.3882 335.4912 545.2876 335.3389 545.1362 c335.1045 544.8989 334.9873 544.5259 334.9873 544.0171 c334.9873 543.2124 335.2725 542.687 335.8428 542.438 c336.1787 542.2905 336.7783 542.2222 337.6416 542.2339 c337.3213 542.4438 337.083 542.6968 336.9268 542.9927 c336.7705 543.2886 336.6924 543.6792 336.6924 544.1655 c336.6924 544.8433 336.9336 545.4351 337.416 545.9429 c337.8984 546.4507 338.6963 546.7046 339.8096 546.7046 c340.8604 546.7046 341.6807 546.4487 342.2705 545.937 c342.8604 545.4253 343.1553 544.8081 343.1553 544.0835 c343.1553 543.5933 343.0342 543.1655 342.792 542.8003 cs1 D341.6611 542.6704 m342.0361 542.9897 342.2236 543.396 342.2236 543.8892 c342.2236 544.6274 341.876 545.1333 341.1807 545.4048 c340.8096 545.5483 340.3232 545.6206 339.7217 545.6206 c339.0146 545.6206 338.4766 545.478 338.1074 545.1919 c337.7383 544.9067 337.5537 544.5229 337.5537 544.0405 c337.5537 543.2866 337.8955 542.7563 338.5791 542.4497 c338.9658 542.2788 339.417 542.1929 339.9326 542.1929 c340.71 542.1929 341.2861 542.3521 341.6611 542.6704 cs*U*u0 D345.4053 539.6147 m345.4053 538.5601 L342.1943 538.5601 L342.5107 538.3101 342.7334 538.0854 342.8623 537.8862 c343.085 537.5464 343.1963 537.1226 343.1963 536.6147 c343.1963 535.7046 342.8779 535.0874 342.2412 534.7632 c341.8936 534.5874 341.4111 534.4995 340.7939 534.4995 c336.7686 534.4995 L336.7686 535.5835 L340.7236 535.5835 L341.1846 535.5835 341.5225 535.6421 341.7373 535.7593 c342.0811 535.9507 342.2529 536.3101 342.2529 536.8374 c342.2529 537.2749 342.1025 537.6714 341.8018 538.0269 c341.501 538.3823 340.9326 538.5601 340.0967 538.5601 c336.7686 538.5601 L336.7686 539.6147 l345.4053 539.6147 Ls*U*u344.7959 532.73 m344.7959 531.6636 L343.0439 531.6636 L343.0439 530.6616 L342.1826 530.6616 L342.1826 531.6636 L338.0869 531.6636 L337.8682 531.6636 337.7217 531.5894 337.6475 531.4409 c337.6045 531.3589 337.583 531.2222 337.583 531.0308 c337.583 530.98 337.584 530.9253 337.5869 530.8667 c337.5889 530.8081 337.5957 530.7397 337.6064 530.6616 c336.7686 530.6616 L336.7334 530.7827 336.708 530.9087 336.6924 531.0396 c336.6768 531.1704 336.6689 531.312 336.6689 531.4644 c336.6689 531.9565 336.7949 532.2905 337.0469 532.4663 c337.2988 532.6421 337.626 532.73 338.0283 532.73 c342.1826 532.73 L342.1826 533.5796 L343.0439 533.5796 L343.0439 532.73 l344.7959 532.73 Ls*U*u339.5459 525.3706 m339.0576 525.3442 338.6611 525.2329 338.3564 525.0376 c337.7861 524.6655 337.501 524.0083 337.501 523.0679 c337.501 522.646 337.5635 522.2622 337.6885 521.9165 c337.9307 521.2466 338.3643 520.9116 338.9893 520.9116 c339.458 520.9116 339.792 521.0532 339.9912 521.3374 c340.1865 521.6245 340.3564 522.0757 340.501 522.688 c340.7646 523.8179 L340.9365 524.5562 341.126 525.0776 341.333 525.3843 c341.6924 525.9146 342.2295 526.1792 342.9443 526.1792 c343.7178 526.1792 344.3525 525.9185 344.8486 525.3979 c345.3447 524.8774 345.5928 524.1401 345.5928 523.186 c345.5928 522.3081 345.375 521.562 344.9395 520.9478 c344.5039 520.3335 343.8076 520.0269 342.8506 520.0269 c342.8506 521.1226 L343.3115 521.1792 343.665 521.2983 343.9111 521.4819 c344.3604 521.8228 344.585 522.4019 344.585 523.2183 c344.585 523.8774 344.4404 524.3511 344.1514 524.6392 c343.8623 524.9272 343.5264 525.0718 343.1436 525.0718 c342.7217 525.0718 342.4131 524.9019 342.2178 524.561 c342.0928 524.3374 341.9365 523.8325 341.749 523.0454 c341.4736 521.8755 L341.3408 521.312 341.1592 520.8765 340.9287 520.5698 c340.5264 520.0396 339.9424 519.7749 339.1768 519.7749 c338.2236 519.7749 337.542 520.1128 337.1318 520.7896 c336.7217 521.4653 336.5166 522.2515 336.5166 523.146 c336.5166 524.1899 336.79 525.0073 337.3369 525.5981 c337.8799 526.189 338.6162 526.478 339.5459 526.4663 c339.5459 525.3706 Ls*U*u342.8711 514.3931 m342.6621 513.9771 342.3916 513.6606 342.0596 513.4438 c341.7432 513.2339 341.374 513.0942 340.9521 513.0239 c340.6631 512.9624 340.2021 512.9312 339.5693 512.9312 c339.5693 517.4956 L338.9307 517.4761 338.418 517.3267 338.0322 517.0483 c337.6465 516.769 337.4541 516.3364 337.4541 515.7515 c337.4541 515.2046 337.6367 514.769 338.001 514.4438 c338.2129 514.2612 338.459 514.1323 338.7373 514.0562 c338.7373 513.019 L338.5068 513.0464 338.25 513.1372 337.9668 513.2915 c337.6836 513.4458 337.4521 513.6177 337.2725 513.8081 c336.96 514.1255 336.749 514.519 336.6396 514.9888 c336.5771 515.2407 336.5459 515.5249 336.5459 515.8433 c336.5459 516.6196 336.8301 517.2778 337.3984 517.8169 c337.9668 518.3569 338.7627 518.6265 339.7861 518.6265 c340.7939 518.6265 341.6123 518.355 342.2412 517.811 c342.8701 517.2681 343.1846 516.5571 343.1846 515.6802 c343.1846 515.2368 343.0801 514.8081 342.8711 514.3931 cs1 D340.4072 514.0151 m340.8643 514.0581 341.2295 514.1567 341.5029 514.311 c342.0107 514.5981 342.2646 515.0767 342.2646 515.7466 c342.2646 516.2271 342.0898 516.6294 341.7402 516.9546 c341.3906 517.2808 340.9463 517.4526 340.4072 517.4722 c340.4072 514.0151 Ls*U*u0 D343.0439 511.5952 m343.0439 510.5933 L342.1533 510.5933 L342.5205 510.2964 342.7842 509.9819 342.9443 509.6499 c343.1045 509.3179 343.1846 508.9487 343.1846 508.5425 c343.1846 507.6519 342.874 507.0503 342.2529 506.7378 c341.9131 506.5659 341.4268 506.48 340.7939 506.48 c336.7686 506.48 L336.7686 507.5522 L340.7236 507.5522 L341.1064 507.5522 341.415 507.6089 341.6494 507.7222 c342.04 507.9097 342.2354 508.2495 342.2354 508.7417 c342.2354 508.9917 342.21 509.1968 342.1592 509.3569 c342.0732 509.646 341.9014 509.8999 341.6436 510.1187 c341.4365 510.2944 341.2227 510.4087 341.002 510.4614 c340.7813 510.5142 340.4658 510.5405 340.0557 510.5405 c336.7686 510.5405 L336.7686 511.5952 l343.0439 511.5952 Ls*U*u338.7373 504.2944 m338.3857 504.2622 338.1162 504.1733 337.9287 504.0249 c337.5889 503.7544 337.4189 503.2837 337.4189 502.6138 c337.4189 502.2153 337.5039 501.8647 337.6738 501.561 c337.8438 501.2583 338.1064 501.1069 338.4619 501.1069 c338.7314 501.1069 338.9365 501.228 339.0771 501.4702 c339.1631 501.6255 339.2627 501.9312 339.376 502.3872 c339.5869 503.2388 L339.7197 503.7827 339.8682 504.1831 340.0322 504.4419 c340.3174 504.9019 340.7119 505.1323 341.2158 505.1323 c341.8096 505.1323 342.29 504.9155 342.6572 504.4819 c343.0244 504.0483 343.208 503.4653 343.208 502.7329 c343.208 501.7749 342.9307 501.0845 342.376 500.6606 c342.0244 500.396 341.6455 500.2671 341.2393 500.2749 c341.2393 501.271 L341.4756 501.2915 341.6914 501.3774 341.8857 501.5288 c342.1611 501.7769 342.2998 502.2065 342.2998 502.8188 c342.2998 503.2261 342.2236 503.5356 342.0723 503.7456 c341.9199 503.9556 341.7197 504.0601 341.4707 504.0601 c341.1982 504.0601 340.9805 503.9224 340.8164 503.646 c340.7197 503.4868 340.6338 503.2524 340.5596 502.9419 c340.3896 502.231 L340.2061 501.4595 340.0283 500.9419 339.8564 500.6792 c339.5869 500.269 339.1631 500.064 338.585 500.064 c338.0264 500.064 337.5439 500.2788 337.1377 500.7075 c336.7314 501.1372 336.5283 501.7905 336.5283 502.6685 c336.5283 503.6138 336.7402 504.2827 337.1641 504.6763 c337.5879 505.0698 338.1123 505.2808 338.7373 505.3081 c338.7373 504.2944 Ls*U*u342.417 494.3745 m341.8789 493.8198 341.0869 493.5425 340.041 493.5425 c339.0293 493.5425 338.1943 493.7866 337.5352 494.2759 c336.875 494.7642 336.5459 495.5229 336.5459 496.5503 c336.5459 497.4077 336.8379 498.0884 337.4209 498.5933 c338.0039 499.0972 338.7881 499.3491 339.7715 499.3491 c340.8252 499.3491 341.6641 499.0835 342.2891 498.5522 c342.9131 498.021 343.2256 497.3071 343.2256 496.4106 c343.2256 495.6079 342.9561 494.9292 342.417 494.3745 cs1 D338.2471 495.0298 m338.7754 494.7729 339.3633 494.644 340.0117 494.644 c340.5967 494.644 341.0723 494.7368 341.4395 494.9224 c342.0176 495.2153 342.3057 495.7222 342.3057 496.4399 c342.3057 497.0776 342.0596 497.5405 341.5684 497.8306 c341.0762 498.1206 340.4834 498.2651 339.7891 498.2651 c339.1221 498.2651 338.5654 498.1206 338.1211 497.8306 c337.6758 497.5405 337.4541 497.0815 337.4541 496.4517 c337.4541 495.7603 337.7178 495.2866 338.2471 495.0298 cs*U*u0 D343.0439 492.2183 m343.0439 491.2163 L341.96 491.2163 L342.1709 491.1343 342.4277 490.9331 342.7305 490.6128 c343.0332 490.2925 343.1846 489.9233 343.1846 489.5054 c343.1846 489.4858 343.1826 489.4526 343.1787 489.4058 c343.1748 489.3589 343.167 489.2788 343.1553 489.1655 c342.042 489.1655 L342.0537 489.228 342.0615 489.2856 342.0654 489.3384 c342.0693 489.3911 342.0713 489.4487 342.0713 489.5112 c342.0713 490.0425 341.9004 490.4507 341.5586 490.7358 c341.2168 491.021 340.8232 491.1636 340.3779 491.1636 c336.7686 491.1636 L336.7686 492.2183 l343.0439 492.2183 Ls*UUU0 0 0 1 K0.2 w 10 M42.9258 507.3584 m40.4209 507.3584 38.3916 505.3271 38.3916 502.8232 c38.3916 500.3184 40.4209 498.2871 42.9258 498.2871 c45.4316 498.2871 47.4609 500.3184 47.4609 502.8232 c47.4609 505.3271 45.4316 507.3584 42.9258 507.3584 Cs136.46 507.3584 m133.9551 507.3584 131.9258 505.3271 131.9258 502.8232 c131.9258 500.3184 133.9551 498.2871 136.46 498.2871 c138.9658 498.2871 140.9951 500.3184 140.9951 502.8232 c140.9951 505.3271 138.9658 507.3584 136.46 507.3584 Cs108.1133 547.043 m105.6084 547.043 103.5781 545.0117 103.5781 542.5078 c103.5781 540.0029 105.6084 537.9717 108.1133 537.9717 c110.6182 537.9717 112.6484 540.0029 112.6484 542.5078 c112.6484 545.0117 110.6182 547.043 108.1133 547.043 Cs42.9258 547.043 m40.4209 547.043 38.3916 545.0117 38.3916 542.5078 c38.3916 540.0029 40.4209 537.9717 42.9258 537.9717 c45.4316 537.9717 47.4609 540.0029 47.4609 542.5078 c47.4609 545.0117 45.4316 547.043 42.9258 547.043 Cs0.228572 w113.7832 514.1611 m113.7832 531.1689 L130.791 531.1689 L130.791 514.1611 l113.7832 514.1611 Ls0.21166 w21.0742 465.9624 m21.0742 579.3486 L179.8145 579.3486 L179.8145 465.9624 l21.0742 465.9624 Ls0.16757 w55.3613 552.5396 m55.3613 559.6265 L55.3613 566.7124 L59.3408 566.7124 L63.3213 566.7124 L63.3213 559.6265 L63.3213 552.5396 L59.3408 552.5396 L55.3613 552.5396 Ls55.3613 478.6187 m55.3613 492.7915 L63.3213 492.7915 L63.3213 478.6187 l55.3613 478.6187 Ls1 Ap0.347521 w38.6748 511.3271 m38.6748 534.0039 L47.1787 534.0039 L47.1787 511.3271 L38.6748 511.3271 Ls0 Ap0.16757 w152.0488 552.5396 m152.0488 559.6265 L152.0488 566.7124 L156.0283 566.7124 L160.0088 566.7124 L160.0088 559.6265 L160.0088 552.5396 L156.0283 552.5396 L152.0488 552.5396 Ls0.167565 w152.0488 478.6187 m152.0488 492.7915 L160.0088 492.7915 L160.0088 478.6187 l152.0488 478.6187 Ls0.167569 w84.585 552.5396 m84.585 559.6265 L84.585 566.7124 L88.5645 566.7124 L92.5439 566.7124 L92.5439 559.6265 L92.5439 552.5396 L88.5645 552.5396 L84.585 552.5396 Ls84.585 478.6182 m84.585 485.7056 L84.585 492.7915 L88.5645 492.7915 L92.5439 492.7915 L92.5439 485.7056 L92.5439 478.6182 L88.5645 478.6182 L84.585 478.6182 Lsu*u0 0.972549 0.266667 0 K0.283465 w 4 M173.3516 554.999 m172.5898 554.4287 171.6152 554.1436 170.4277 554.1436 c169.1426 554.1436 168.0742 554.4697 167.2227 555.1221 c166.2227 555.8877 165.7227 556.9795 165.7227 558.3975 c165.7227 559.7217 166.1602 560.7627 167.0352 561.5205 c167.8789 562.1963 168.9453 562.5342 170.2344 562.5342 c171.3984 562.5342 172.3945 562.2451 173.2227 561.667 c174.2852 560.9248 174.8164 559.8271 174.8164 558.374 c174.8164 556.8545 174.3281 555.7295 173.3516 554.999 cs1 D167.8652 556.0273 m168.6025 555.5684 169.4502 555.3389 170.4072 555.3389 c171.4199 555.3389 172.2354 555.6035 172.8525 556.1328 c173.4707 556.6621 173.7793 557.3857 173.7793 558.3037 c173.7793 559.1943 173.4736 559.9209 172.8613 560.4834 c172.25 561.0459 171.3477 561.3271 170.1553 561.3271 c169.2012 561.3271 168.3975 561.0859 167.7422 560.6035 c167.0869 560.1211 166.7598 559.3389 166.7598 558.2568 c166.7598 557.2295 167.1279 556.4863 167.8652 556.0273 cs*U*u0 D172.2207 552.9834 m172.2207 551.9521 L171.3887 551.9521 L171.6738 551.7402 171.8945 551.5098 172.0508 551.2588 c172.2852 550.9023 172.4023 550.4834 172.4023 550.002 c172.4023 549.2891 172.1299 548.6836 171.585 548.1865 c171.04 547.6895 170.2617 547.4404 169.25 547.4404 c167.8828 547.4404 166.9063 547.7998 166.3203 548.5166 c165.9492 548.9717 165.7637 549.501 165.7637 550.1055 c165.7637 550.5801 165.8672 550.9775 166.0742 551.2988 c166.1914 551.4873 166.3926 551.6973 166.6777 551.9287 c163.4727 551.9287 L163.4727 552.9834 l172.2207 552.9834 Ls1 D167.3018 549.0156 m167.7139 548.6885 168.3301 548.5244 169.1504 548.5244 c169.6504 548.5244 170.0801 548.5967 170.4395 548.7422 c171.1309 549.0166 171.4766 549.5176 171.4766 550.2471 c171.4766 550.9805 171.1113 551.4814 170.3809 551.752 c169.9902 551.8975 169.4941 551.9697 168.8926 551.9697 c168.4082 551.9697 167.9961 551.8975 167.6563 551.752 c167.0078 551.4775 166.6836 550.9766 166.6836 550.2471 c166.6836 549.7529 166.8896 549.3428 167.3018 549.0156 cs*U*u0 D174.002 546.0107 m174.002 544.9443 L172.25 544.9443 L172.25 543.9424 L171.3887 543.9424 L171.3887 544.9443 L167.293 544.9443 L167.0742 544.9443 166.9277 544.8701 166.8535 544.7217 c166.8105 544.6396 166.7891 544.5029 166.7891 544.3115 c166.7891 544.2607 166.791 544.2061 166.793 544.1475 c166.7959 544.0889 166.8027 544.0205 166.8125 543.9424 c165.9746 543.9424 L165.9395 544.0635 165.9141 544.1895 165.8984 544.3203 c165.8828 544.4512 165.875 544.5928 165.875 544.7451 c165.875 545.2373 166.001 545.5713 166.2529 545.7471 c166.5049 545.9229 166.832 546.0107 167.2344 546.0107 c171.3887 546.0107 L171.3887 546.8604 L172.25 546.8604 L172.25 546.0107 l174.002 546.0107 Ls*U*u174.582 542.8877 m174.582 541.8154 L173.3867 541.8154 L173.3867 542.8877 l174.582 542.8877 Ls172.2207 542.8877 m172.2207 541.8154 L165.9746 541.8154 L165.9746 542.8877 l172.2207 542.8877 Ls*U*u171.916 536.0762 m171.5723 535.6328 170.9805 535.3662 170.1406 535.2764 c170.1406 536.3018 L170.5273 536.3643 170.8486 536.5068 171.1045 536.7295 c171.3604 536.9521 171.4883 537.3096 171.4883 537.8018 c171.4883 538.4736 171.1611 538.9541 170.5049 539.2432 c170.0801 539.4307 169.5557 539.5244 168.9307 539.5244 c168.3027 539.5244 167.7744 539.3916 167.3447 539.126 c166.916 538.8604 166.7012 538.4424 166.7012 537.8721 c166.7012 537.4346 166.835 537.0879 167.1016 536.832 c167.3682 536.5762 167.7324 536.3994 168.1953 536.3018 c168.1953 535.2764 L167.3633 535.3936 166.7549 535.6865 166.3701 536.1553 c165.9854 536.624 165.793 537.2236 165.793 537.9541 c165.793 538.7744 166.0928 539.4287 166.6924 539.917 c167.292 540.4053 168.041 540.6494 168.9395 540.6494 c170.041 540.6494 170.8984 540.3818 171.5117 539.8467 c172.125 539.3115 172.4316 538.6299 172.4316 537.8018 c172.4316 537.0947 172.2598 536.5195 171.916 536.0762 cs*U*u169.7725 530.8584 m169.8037 530.6162 169.9053 530.4541 170.0771 530.3721 c170.1709 530.3252 170.3057 530.3018 170.4824 530.3018 c170.8438 530.3018 171.1055 530.4297 171.2676 530.6846 c171.4307 530.9404 171.5117 531.3057 171.5117 531.7813 c171.5117 532.3311 171.3623 532.7207 171.0645 532.9512 c170.8994 533.0791 170.6543 533.1631 170.3281 533.2021 c170.3281 534.1865 L171.1035 534.167 171.6436 533.916 171.9473 533.4346 c172.251 532.9531 172.4023 532.3936 172.4023 531.7578 c172.4023 531.0205 172.2617 530.4219 171.9805 529.9609 c171.6992 529.5049 171.2617 529.2764 170.668 529.2764 c167.0527 529.2764 L166.9434 529.2764 166.8555 529.2539 166.7891 529.209 c166.7227 529.1641 166.6895 529.0693 166.6895 528.9248 c166.6895 528.8779 166.6924 528.8252 166.6982 528.7666 c166.7041 528.708 166.7129 528.6455 166.7246 528.5791 c165.9453 528.5791 L165.8984 528.7432 165.8691 528.8682 165.8574 528.9541 c165.8457 529.04 165.8398 529.1572 165.8398 529.3057 c165.8398 529.6689 165.9688 529.9326 166.2266 530.0967 c166.3633 530.1826 166.5566 530.2432 166.8066 530.2783 c166.5254 530.4932 166.2813 530.8018 166.0742 531.2041 c165.8672 531.6064 165.7637 532.0498 165.7637 532.5342 c165.7637 533.1162 165.9404 533.5918 166.2939 533.9609 c166.6465 534.3301 167.0889 534.5146 167.6191 534.5146 c168.2002 534.5146 168.6514 534.333 168.9707 533.9697 c169.291 533.6064 169.4883 533.1299 169.5615 532.54 c169.7725 530.8584 Ls1 D166.9238 533.0791 m166.748 532.8564 166.6602 532.5928 166.6602 532.2881 c166.6602 531.917 166.7461 531.5576 166.918 531.21 c167.2021 530.624 167.6689 530.3311 168.3164 530.3311 c169.1641 530.3311 L169.082 530.46 169.0137 530.625 168.958 530.8281 c168.9033 531.0313 168.8643 531.2295 168.8408 531.4248 c168.7588 532.0615 L168.708 532.4443 168.6289 532.7314 168.5195 532.9238 c168.3359 533.25 168.0439 533.4131 167.6426 533.4131 c167.3389 533.4131 167.0986 533.3018 166.9238 533.0791 cs*U*u0 D174.582 527.5186 m174.582 526.4639 L165.9746 526.4639 L165.9746 527.5186 l174.582 527.5186 Ls*U*u174.582 521.3545 m174.582 517.9141 L174.582 516.7461 174.1621 515.8398 173.3223 515.1963 c172.5645 514.6221 171.5938 514.335 170.4102 514.335 c169.4961 514.335 168.6699 514.5049 167.9316 514.8438 c166.627 515.4414 165.9746 516.4688 165.9746 517.9258 c165.9746 521.3545 l174.582 521.3545 Ls1 D166.9707 518.1426 m166.9707 517.7568 167.0117 517.4404 167.0938 517.1914 c167.2461 516.749 167.5391 516.3857 167.9727 516.1035 c168.3203 515.8779 168.7656 515.7158 169.3086 515.6162 c169.6328 515.5586 169.9336 515.5303 170.2109 515.5303 c171.2773 515.5303 172.1055 515.7373 172.6953 516.1523 c173.2852 516.5664 173.5801 517.2334 173.5801 518.1543 c173.5801 520.1768 L166.9707 520.1768 l166.9707 518.1426 Ls*U*u0 D172.0771 509.0059 m171.8682 508.5898 171.5977 508.2734 171.2656 508.0566 c170.9492 507.8467 170.5801 507.707 170.1582 507.6367 c169.8691 507.5752 169.4082 507.5439 168.7754 507.5439 c168.7754 512.1084 L168.1367 512.0889 167.625 511.9395 167.2393 511.6611 c166.8535 511.3818 166.6602 510.9492 166.6602 510.3643 c166.6602 509.8174 166.8428 509.3818 167.208 509.0566 c167.4199 508.874 167.665 508.7451 167.9434 508.6689 c167.9434 507.6318 L167.7129 507.6592 167.4561 507.75 167.1729 507.9043 c166.8896 508.0586 166.6582 508.2305 166.4785 508.4209 c166.166 508.7383 165.9551 509.1318 165.8457 509.6016 c165.7832 509.8535 165.752 510.1377 165.752 510.4561 c165.752 511.2324 166.0361 511.8906 166.6045 512.4297 c167.1729 512.9697 167.9688 513.2393 168.9922 513.2393 c170 513.2393 170.8184 512.9678 171.4473 512.4238 c172.0762 511.8809 172.3906 511.1699 172.3906 510.293 c172.3906 509.8496 172.2861 509.4209 172.0771 509.0059 cs1 D169.6133 508.6279 m170.0703 508.6709 170.4355 508.7695 170.709 508.9238 c171.2168 509.2109 171.4707 509.6895 171.4707 510.3594 c171.4707 510.8398 171.2959 511.2422 170.9463 511.5674 c170.5967 511.8936 170.1523 512.0654 169.6133 512.085 c169.6133 508.6279 Ls*U*u0 D172.25 506.208 m172.25 505.2061 L171.3594 505.2061 L171.7266 504.9092 171.9902 504.5947 172.1504 504.2627 c172.3105 503.9307 172.3906 503.5615 172.3906 503.1553 c172.3906 502.2646 172.0801 501.6631 171.459 501.3506 c171.1191 501.1787 170.6328 501.0928 170 501.0928 c165.9746 501.0928 L165.9746 502.165 L169.9297 502.165 L170.3125 502.165 170.6211 502.2217 170.8555 502.335 c171.2461 502.5225 171.4414 502.8623 171.4414 503.3545 c171.4414 503.6045 171.416 503.8096 171.3652 503.9697 c171.2793 504.2588 171.1074 504.5127 170.8496 504.7314 c170.6426 504.9072 170.4287 505.0215 170.208 505.0742 c169.9873 505.127 169.6719 505.1533 169.2617 505.1533 c165.9746 505.1533 L165.9746 506.208 l172.25 506.208 Ls*U*u167.9434 498.9072 m167.5918 498.875 167.3223 498.7861 167.1348 498.6377 c166.7949 498.3672 166.625 497.8965 166.625 497.2266 c166.625 496.8281 166.71 496.4775 166.8799 496.1738 c167.0498 495.8711 167.3125 495.7197 167.668 495.7197 c167.9375 495.7197 168.1426 495.8408 168.2832 496.083 c168.3691 496.2383 168.4688 496.5439 168.582 497 c168.793 497.8516 L168.9258 498.3955 169.0742 498.7959 169.2383 499.0547 c169.5234 499.5146 169.918 499.7451 170.4219 499.7451 c171.0156 499.7451 171.4961 499.5283 171.8633 499.0947 c172.2305 498.6611 172.4141 498.0781 172.4141 497.3457 c172.4141 496.3877 172.1367 495.6973 171.582 495.2734 c171.2305 495.0088 170.8516 494.8799 170.4453 494.8877 c170.4453 495.8838 L170.6826 495.9043 170.8984 495.9902 171.0928 496.1416 c171.3682 496.3896 171.5059 496.8193 171.5059 497.4316 c171.5059 497.8389 171.4307 498.1484 171.2783 498.3584 c171.127 498.5684 170.9258 498.6729 170.6768 498.6729 c170.4043 498.6729 170.1865 498.5352 170.0234 498.2588 c169.9258 498.0996 169.8398 497.8652 169.7656 497.5547 c169.5957 496.8438 L169.4121 496.0723 169.2344 495.5547 169.0625 495.292 c168.793 494.8818 168.3691 494.6768 167.791 494.6768 c167.2324 494.6768 166.75 494.8916 166.3438 495.3203 c165.9375 495.75 165.7344 496.4033 165.7344 497.2813 c165.7344 498.2266 165.9463 498.8955 166.3701 499.2891 c166.7939 499.6826 167.3184 499.8936 167.9434 499.9209 c167.9434 498.9072 Ls*U*u174.582 493.5342 m174.582 492.4619 L173.3867 492.4619 L173.3867 493.5342 l174.582 493.5342 Ls172.2207 493.5342 m172.2207 492.4619 L165.9746 492.4619 L165.9746 493.5342 l172.2207 493.5342 Ls*U*u174.002 490.6572 m174.002 489.5908 L172.25 489.5908 L172.25 488.5889 L171.3887 488.5889 L171.3887 489.5908 L167.293 489.5908 L167.0742 489.5908 166.9277 489.5166 166.8535 489.3682 c166.8105 489.2861 166.7891 489.1494 166.7891 488.958 c166.7891 488.9072 166.791 488.8525 166.793 488.7939 c166.7959 488.7354 166.8027 488.667 166.8125 488.5889 c165.9746 488.5889 L165.9395 488.71 165.9141 488.8359 165.8984 488.9668 c165.8828 489.0977 165.875 489.2393 165.875 489.3916 c165.875 489.8838 166.001 490.2178 166.2529 490.3936 c166.5049 490.5693 166.832 490.6572 167.2344 490.6572 c171.3887 490.6572 L171.3887 491.5068 L172.25 491.5068 L172.25 490.6572 l174.002 490.6572 Ls*U*u172.25 483.6113 m172.25 482.4453 L171.8477 482.5938 170.9297 482.9238 169.4951 483.4355 c168.416 483.8184 167.5371 484.1387 166.8574 484.3965 c165.2568 485.0049 164.2813 485.4346 163.9297 485.6846 c163.5781 485.9346 163.4023 486.3633 163.4023 486.9727 c163.4023 487.1201 163.4082 487.2344 163.4199 487.3145 c163.4316 487.3945 163.4531 487.4932 163.4844 487.6104 c164.4453 487.6104 L164.3945 487.4268 164.3633 487.2949 164.3516 487.2129 c164.3398 487.1309 164.334 487.0586 164.334 486.9961 c164.334 486.8008 164.3662 486.6582 164.4307 486.5664 c164.4951 486.4746 164.5742 486.3975 164.668 486.335 c164.6992 486.3154 164.8584 486.2451 165.1475 486.125 c165.4355 486.0039 165.6504 485.916 165.79 485.8613 c172.25 488.1816 L172.25 486.9863 L167.1387 485.3047 l172.25 483.6113 Ls*UU1 Ap0.172549 0 0.996078 0 K1 w 10 M147.4502 273.6563 m147.4502 261.9141 137.9316 252.3955 126.1904 252.3955 c114.4492 252.3955 104.9307 261.9141 104.9307 273.6563 c104.9307 285.3975 114.4492 294.916 126.1904 294.916 c137.9316 294.916 147.4502 285.3975 147.4502 273.6563 cs0 Ap0 0 0 1 K0.2 w347.2119 304.168 m347.2119 318.3408 L338.7891 318.3408 L338.7891 330.9766 L26.9775 330.9766 L26.9775 318.3408 L18.5459 318.3408 L18.5459 304.168 L26.9775 304.168 L26.9775 244.3994 L18.5459 244.3994 L18.5459 230.2266 L26.9775 230.2266 L26.9775 217.5908 L338.7891 217.5908 L338.7891 230.2266 L347.2129 230.2266 L347.2129 244.3994 L338.7891 244.3994 L338.7891 304.168 L347.2119 304.168 Ls0.194936 w326.3438 304.167 m315.5723 304.167 L315.5723 318.3398 L326.3438 318.3398 l326.3438 304.167 Ls326.3438 230.2266 m315.5723 230.2266 L315.5723 244.3994 L326.3438 244.3994 l326.3438 230.2266 Ls210.5488 304.167 m199.7773 304.167 L199.7773 318.3398 L210.5488 318.3398 l210.5488 304.167 Ls210.458 230.2266 m199.6865 230.2266 L199.6865 244.3994 L210.458 244.3994 l210.458 230.2266 Ls1 Ap0.184617 w143.1982 273.6563 m143.1982 264.2627 135.584 256.6484 126.1904 256.6484 c116.7969 256.6484 109.1826 264.2627 109.1826 273.6563 c109.1826 283.0488 116.7969 290.6631 126.1904 290.6631 c135.584 290.6631 143.1982 283.0488 143.1982 273.6563 cs0.222687 w138.9463 150.7568 m138.9463 143.7119 133.2354 138.001 126.1904 138.001 c119.1455 138.001 113.4346 143.7119 113.4346 150.7568 c113.4346 157.8018 119.1455 163.5137 126.1904 163.5137 c133.2354 163.5137 138.9463 157.8018 138.9463 150.7568 csu0.456158 w130.502 193.7197 m130.502 191.3486 128.5811 189.4268 126.208 189.4268 c123.8369 189.4268 121.916 191.3486 121.916 193.7197 c121.916 196.0918 123.8369 198.0137 126.208 198.0137 c128.5811 198.0137 130.502 196.0918 130.502 193.7197 cs130.502 107.7939 m130.502 105.4238 128.5811 103.502 126.208 103.502 c123.8369 103.502 121.916 105.4238 121.916 107.7939 c121.916 110.165 123.8369 112.0869 126.208 112.0869 c128.5811 112.0869 130.502 110.165 130.502 107.7939 csUu244.3721 193.7197 m244.3721 191.3486 242.4512 189.4268 240.0791 189.4268 c237.707 189.4268 235.7861 191.3486 235.7861 193.7197 c235.7861 196.0918 237.707 198.0137 240.0791 198.0137 c242.4512 198.0137 244.3721 196.0918 244.3721 193.7197 cs244.3721 107.7939 m244.3721 105.4238 242.4512 103.502 240.0791 103.502 c237.707 103.502 235.7861 105.4238 235.7861 107.7939 c235.7861 110.165 237.707 112.0869 240.0791 112.0869 c242.4512 112.0869 244.3721 110.165 244.3721 107.7939 csU0 Ap0.2 w347.2129 180.6416 m347.2129 194.8145 L338.7891 194.8145 L338.7891 207.4502 L110.8174 207.4502 L110.8174 207.4492 l110.8174 203.5361 107.6445 200.3633 103.7314 200.3633 c99.8174 200.3633 96.6445 203.5361 96.6445 207.4492 c96.6445 207.4502 L26.9775 207.4502 L26.9775 194.8145 L18.5459 194.8145 L18.5459 180.6416 L26.9775 180.6416 L26.9775 120.873 L18.5459 120.873 L18.5459 106.7002 L26.9775 106.7002 L26.9775 94.0645 L338.7891 94.0645 L338.7891 106.7002 L347.2129 106.7002 L347.2129 120.873 L338.7891 120.873 L338.7891 180.6416 L347.2129 180.6416 Lsu*u0 0.972549 0.266667 0 K0.283465 w 4 M35.4238 108.4434 m39.1455 108.4434 L40.1602 108.4434 40.8818 108.1426 41.3096 107.541 c41.5615 107.1855 41.6875 106.7754 41.6875 106.3105 c41.6875 105.7676 41.5332 105.3223 41.2246 104.9746 c41.0645 104.791 40.834 104.623 40.5332 104.4707 c40.9746 104.3027 41.3047 104.1133 41.5234 103.9023 c41.9102 103.5273 42.1035 103.0098 42.1035 102.3496 c42.1035 101.7949 41.9287 101.293 41.5791 100.8438 c41.0557 100.1719 40.2246 99.8359 39.085 99.8359 c35.4238 99.8359 l35.4238 108.4434 Ls1 D38.71 104.8047 m39.207 104.8047 39.5938 104.873 39.8701 105.0098 c40.3047 105.2246 40.5215 105.6113 40.5215 106.1699 c40.5215 106.7324 40.291 107.1113 39.8291 107.3066 c39.5684 107.416 39.1816 107.4707 38.668 107.4707 c36.5664 107.4707 L36.5664 104.8047 l38.71 104.8047 Ls39.1035 100.832 m39.8252 100.832 40.3398 101.0391 40.6475 101.4531 c40.8408 101.7148 40.9375 102.0313 40.9375 102.4023 c40.9375 103.0273 40.6553 103.4531 40.0918 103.6797 c39.792 103.8008 39.3955 103.8613 38.9023 103.8613 c36.5664 103.8613 L36.5664 100.832 l39.1035 100.832 Ls*U*u0 D47.8633 105.4854 m48.418 104.9463 48.6953 104.1543 48.6953 103.1084 c48.6953 102.0977 48.4512 101.2617 47.9619 100.6025 c47.4736 99.9434 46.7148 99.6133 45.6875 99.6133 c44.8301 99.6133 44.1494 99.9053 43.6445 100.4883 c43.1406 101.0723 42.8887 101.8555 42.8887 102.8389 c42.8887 103.8926 43.1543 104.7314 43.6855 105.3564 c44.2168 105.9805 44.9307 106.293 45.8271 106.293 c46.6299 106.293 47.3086 106.0234 47.8633 105.4854 cs1 D47.208 101.3145 m47.4648 101.8428 47.5938 102.4316 47.5938 103.0791 c47.5938 103.6641 47.501 104.1396 47.3154 104.5068 c47.0225 105.084 46.5156 105.373 45.7979 105.373 c45.1602 105.373 44.6973 105.127 44.4072 104.6357 c44.1172 104.1436 43.9727 103.5508 43.9727 102.8564 c43.9727 102.1895 44.1172 101.6338 44.4072 101.1885 c44.6973 100.7441 45.1563 100.5215 45.7861 100.5215 c46.4775 100.5215 46.9512 100.7861 47.208 101.3145 cs*U*u0 D50.2012 107.8633 m51.2676 107.8633 L51.2676 106.1113 L52.2695 106.1113 L52.2695 105.25 L51.2676 105.25 L51.2676 101.1543 L51.2676 100.9355 51.3418 100.7891 51.4902 100.7148 c51.5723 100.6719 51.709 100.6504 51.9004 100.6504 c51.9512 100.6504 52.0059 100.6514 52.0645 100.6543 c52.123 100.6572 52.1914 100.6631 52.2695 100.6738 c52.2695 99.8359 L52.1484 99.8008 52.0225 99.7754 51.8916 99.7598 c51.7607 99.7441 51.6191 99.7363 51.4668 99.7363 c50.9746 99.7363 50.6406 99.8623 50.4648 100.1143 c50.2891 100.3662 50.2012 100.6934 50.2012 101.0957 c50.2012 105.25 L49.3516 105.25 L49.3516 106.1113 L50.2012 106.1113 l50.2012 107.8633 Ls*U*u53.5352 107.8633 m54.6016 107.8633 L54.6016 106.1113 L55.6035 106.1113 L55.6035 105.25 L54.6016 105.25 L54.6016 101.1543 L54.6016 100.9355 54.6758 100.7891 54.8242 100.7148 c54.9063 100.6719 55.043 100.6504 55.2344 100.6504 c55.2852 100.6504 55.3398 100.6514 55.3984 100.6543 c55.457 100.6572 55.5254 100.6631 55.6035 100.6738 c55.6035 99.8359 L55.4824 99.8008 55.3564 99.7754 55.2256 99.7598 c55.0947 99.7441 54.9531 99.7363 54.8008 99.7363 c54.3086 99.7363 53.9746 99.8623 53.7988 100.1143 c53.623 100.3662 53.5352 100.6934 53.5352 101.0957 c53.5352 105.25 L52.6855 105.25 L52.6855 106.1113 L53.5352 106.1113 l53.5352 107.8633 Ls*U*u61.2051 105.4854 m61.7598 104.9463 62.0371 104.1543 62.0371 103.1084 c62.0371 102.0977 61.793 101.2617 61.3037 100.6025 c60.8154 99.9434 60.0566 99.6133 59.0293 99.6133 c58.1719 99.6133 57.4912 99.9053 56.9863 100.4883 c56.4824 101.0723 56.2305 101.8555 56.2305 102.8389 c56.2305 103.8926 56.4961 104.7314 57.0273 105.3564 c57.5586 105.9805 58.2725 106.293 59.1689 106.293 c59.9717 106.293 60.6504 106.0234 61.2051 105.4854 cs1 D60.5498 101.3145 m60.8066 101.8428 60.9355 102.4316 60.9355 103.0791 c60.9355 103.6641 60.8428 104.1396 60.6572 104.5068 c60.3643 105.084 59.8574 105.373 59.1396 105.373 c58.502 105.373 58.0391 105.127 57.749 104.6357 c57.459 104.1436 57.3145 103.5508 57.3145 102.8564 c57.3145 102.1895 57.459 101.6338 57.749 101.1885 c58.0391 100.7441 58.498 100.5215 59.1279 100.5215 c59.8193 100.5215 60.293 100.7861 60.5498 101.3145 cs*U*u0 D63.332 106.1113 m64.375 106.1113 L64.375 105.2207 L64.625 105.5293 64.8516 105.7539 65.0547 105.8945 c65.4023 106.1328 65.7969 106.252 66.2383 106.252 c66.7383 106.252 67.1406 106.1289 67.4453 105.8828 c67.6172 105.7422 67.7734 105.5352 67.9141 105.2617 c68.1484 105.5977 68.4238 105.8467 68.7402 106.0088 c69.0566 106.1709 69.4121 106.252 69.8066 106.252 c70.6504 106.252 71.2246 105.9473 71.5293 105.3379 c71.6934 105.0098 71.7754 104.5684 71.7754 104.0137 c71.7754 99.8359 L70.6797 99.8359 L70.6797 104.1953 L70.6797 104.6133 70.5752 104.9004 70.3662 105.0566 c70.1572 105.2129 69.9023 105.291 69.6016 105.291 c69.1875 105.291 68.8311 105.1523 68.5322 104.875 c68.2334 104.5977 68.084 104.1348 68.084 103.4863 c68.084 99.8359 L67.0117 99.8359 L67.0117 103.9316 L67.0117 104.3574 66.9609 104.668 66.8594 104.8633 c66.6992 105.1563 66.4004 105.3027 65.9629 105.3027 c65.5645 105.3027 65.2021 105.1484 64.876 104.8398 c64.5498 104.5313 64.3867 103.9727 64.3867 103.1641 c64.3867 99.8359 L63.332 99.8359 l63.332 106.1113 Ls*UUu*u36.7568 231.9697 m38.4277 231.9697 L40.9023 224.6924 L43.3594 231.9697 L45.0186 231.9697 L45.0186 223.3623 L43.9053 223.3623 L43.9053 228.4424 L43.9053 228.6182 43.9092 228.9092 43.917 229.3154 c43.9248 229.7217 43.9287 230.1572 43.9287 230.6221 c41.4717 223.3623 L40.3154 223.3623 L37.835 230.6221 L37.835 230.3584 L37.835 230.1475 37.8408 229.8262 37.8525 229.3945 c37.8643 228.9629 37.8701 228.6455 37.8701 228.4424 c37.8701 223.3623 L36.7568 223.3623 l36.7568 231.9697 Ls*U*u46.6416 231.9697 m47.7139 231.9697 L47.7139 230.7744 L46.6416 230.7744 l46.6416 231.9697 Ls46.6416 229.6084 m47.7139 229.6084 L47.7139 223.3623 L46.6416 223.3623 l46.6416 229.6084 Ls*U*u52.7559 229.4443 m52.9424 229.3271 53.1543 229.1221 53.3916 228.8291 c53.3916 231.999 L54.4053 231.999 L54.4053 223.3623 L53.4561 223.3623 L53.4561 224.2354 L53.2109 223.8486 52.9209 223.5693 52.5859 223.3975 c52.252 223.2256 51.8682 223.1396 51.4365 223.1396 c50.7402 223.1396 50.1367 223.4336 49.627 224.0215 c49.1172 224.6094 48.8623 225.3916 48.8623 226.3682 c48.8623 227.2822 49.0947 228.0742 49.5596 228.7441 c50.0244 229.4141 50.6895 229.749 51.5527 229.749 c52.0313 229.749 52.4326 229.6475 52.7559 229.4443 cs1 D50.4014 224.7393 m50.6846 224.2861 51.1396 224.0596 51.7656 224.0596 c52.251 224.0596 52.6504 224.2695 52.9629 224.6895 c53.2764 225.1094 53.4326 225.7119 53.4326 226.4971 c53.4326 227.29 53.2715 227.877 52.9492 228.2578 c52.626 228.6387 52.2275 228.8291 51.7539 228.8291 c51.2246 228.8291 50.7969 228.626 50.4678 228.2197 c50.1396 227.8135 49.9756 227.2158 49.9756 226.4268 c49.9756 225.7549 50.1172 225.1924 50.4014 224.7393 cs*U*u0 D59.4297 229.4443 m59.6162 229.3271 59.8281 229.1221 60.0654 228.8291 c60.0654 231.999 L61.0791 231.999 L61.0791 223.3623 L60.1299 223.3623 L60.1299 224.2354 L59.8848 223.8486 59.5947 223.5693 59.2598 223.3975 c58.9258 223.2256 58.542 223.1396 58.1104 223.1396 c57.4141 223.1396 56.8105 223.4336 56.3008 224.0215 c55.791 224.6094 55.5361 225.3916 55.5361 226.3682 c55.5361 227.2822 55.7686 228.0742 56.2334 228.7441 c56.6982 229.4141 57.3633 229.749 58.2266 229.749 c58.7051 229.749 59.1064 229.6475 59.4297 229.4443 cs1 D57.0752 224.7393 m57.3584 224.2861 57.8135 224.0596 58.4395 224.0596 c58.9248 224.0596 59.3242 224.2695 59.6367 224.6895 c59.9502 225.1094 60.1064 225.7119 60.1064 226.4971 c60.1064 227.29 59.9453 227.877 59.623 228.2578 c59.2998 228.6387 58.9014 228.8291 58.4277 228.8291 c57.8984 228.8291 57.4707 228.626 57.1416 228.2197 c56.8135 227.8135 56.6494 227.2158 56.6494 226.4268 c56.6494 225.7549 56.791 225.1924 57.0752 224.7393 cs*U*u0 D62.6846 231.9697 m63.7393 231.9697 L63.7393 223.3623 L62.6846 223.3623 l62.6846 231.9697 Ls*U*u69.1973 229.4648 m69.6133 229.2559 69.9297 228.9854 70.1465 228.6533 c70.3564 228.3369 70.4961 227.9678 70.5664 227.5459 c70.6279 227.2568 70.6592 226.7959 70.6592 226.1631 c66.0947 226.1631 L66.1143 225.5244 66.2637 225.0127 66.542 224.627 c66.8213 224.2412 67.2539 224.0479 67.8389 224.0479 c68.3857 224.0479 68.8213 224.2305 69.1465 224.5957 c69.3291 224.8066 69.458 225.0527 69.5342 225.3311 c70.5713 225.3311 L70.5439 225.1006 70.4531 224.8438 70.2988 224.5605 c70.1445 224.2773 69.9727 224.0459 69.7822 223.8662 c69.4648 223.5537 69.0713 223.3428 68.6016 223.2334 c68.3496 223.1709 68.0654 223.1396 67.7471 223.1396 c66.9707 223.1396 66.3125 223.4238 65.7734 223.9922 c65.2334 224.5605 64.9639 225.3564 64.9639 226.3799 c64.9639 227.3877 65.2354 228.2061 65.7793 228.835 c66.3223 229.4639 67.0332 229.7783 67.9102 229.7783 c68.3535 229.7783 68.7822 229.6738 69.1973 229.4648 cs1 D69.5752 227.001 m69.5322 227.458 69.4336 227.8232 69.2793 228.0967 c68.9922 228.6045 68.5137 228.8584 67.8438 228.8584 c67.3633 228.8584 66.9609 228.6836 66.6357 228.334 c66.3096 227.9844 66.1377 227.54 66.1182 227.001 c69.5752 227.001 Ls*UUu0 D0 0 0 1 K0.2 w 10 M348.0439 428.1353 m348.0439 442.3081 L339.6211 442.3081 L339.6211 454.9443 L27.8096 454.9443 L27.8096 442.3081 L19.3779 442.3081 L19.3779 428.1353 L27.8096 428.1353 L27.8096 368.3672 L19.3779 368.3672 L19.3779 354.1943 L27.8096 354.1943 L27.8096 341.5586 L339.6211 341.5586 L339.6211 354.1943 L348.0439 354.1943 L348.0439 368.3672 L339.6211 368.3672 L339.6211 428.1353 L348.0439 428.1353 Ls148.2822 398.2515 m148.2822 386.5103 138.7646 376.9912 127.0225 376.9912 c115.2813 376.9912 105.7627 386.5103 105.7627 398.2515 c105.7627 409.9922 115.2813 419.5112 127.0225 419.5112 c138.7646 419.5112 148.2822 409.9922 148.2822 398.2515 Cs0.194936 w327.1758 428.1348 m316.4043 428.1348 L316.4043 442.3076 L327.1758 442.3076 l327.1758 428.1348 Ls327.1758 354.1943 m316.4043 354.1943 L316.4043 368.3682 L327.1758 368.3682 l327.1758 354.1943 Ls211.3809 428.1348 m200.6094 428.1348 L200.6094 442.3076 L211.3809 442.3076 l211.3809 428.1348 Ls211.29 354.1943 m200.5186 354.1943 L200.5186 368.3682 L211.29 368.3682 l211.29 354.1943 Lsu*u0 0.972549 0.266667 0 K0.283465 w1 XR232.2959 430.7422 m229.001 430.7422 L229.2979 430.4424 229.5244 430.1172 229.6748 429.7676 C229.8213 429.418 229.8975 429.0435 229.8975 428.6455 c229.8975 427.7817 229.5693 427.0464 228.9189 426.4414 C228.2646 425.835 227.4268 425.5332 226.4053 425.5332 c225.4189 425.5332 224.5967 425.8457 223.9346 426.4717 C223.2686 427.0967 222.9385 427.8379 222.9385 428.6953 c222.9385 429.0767 223.0068 429.4326 223.1436 429.7617 C223.2783 430.0908 223.499 430.417 223.8057 430.7422 C223.1006 430.7422 L223.1006 432.4038 L232.2959 432.4038 L232.2959 430.7422 L232.2959 430.7422 Ls1 D228.374 428.9976 m228.374 429.5205 228.1943 429.9556 227.8369 430.2988 c227.4795 430.644 227.0127 430.8169 226.4365 430.8169 c225.8467 430.8169 225.3701 430.644 225.0088 430.2988 C224.6436 429.9556 224.4639 429.5205 224.4639 428.9976 c224.4639 428.4897 224.6475 428.0625 225.0166 427.7153 C225.3877 427.3672 225.8584 427.1943 226.4307 427.1943 c226.999 427.1943 227.4639 427.3652 227.8271 427.7065 C228.1904 428.0459 228.374 428.4771 228.374 428.9976 c228.374 428.9976 ls0 D232.4561 424.3511 m232.4561 424.0596 232.3506 423.8101 232.1416 423.6021 C231.9307 423.3916 231.6768 423.2876 231.376 423.2876 c231.0811 423.2876 230.8291 423.3916 230.6201 423.5972 c230.4131 423.8037 230.3096 424.0513 230.3096 424.3413 c230.3096 424.6362 230.415 424.8887 230.626 425.0967 C230.8389 425.3066 231.0967 425.4106 231.4014 425.4106 c231.6924 425.4106 231.9404 425.3066 232.1455 425.1006 c232.3525 424.8945 232.4561 424.645 232.4561 424.3511 c232.4561 424.3511 ls229.7334 425.186 m229.7334 423.5249 L223.1006 423.5249 L223.1006 425.186 L229.7334 425.186 L229.7334 425.186 Ls229.8975 419.7505 m229.8975 419.124 229.7412 418.5347 229.4268 417.9829 C229.1143 417.4292 228.6943 417.0005 228.1572 416.6904 C227.6221 416.3799 227.0439 416.2261 226.4229 416.2261 c225.7998 416.2261 225.2158 416.3823 224.6729 416.6924 C224.1299 417.0044 223.7041 417.4292 223.3975 417.9663 C223.0928 418.5054 222.9385 419.0967 222.9385 419.7441 c222.9385 420.6982 223.2764 421.5117 223.9502 422.1846 c224.6279 422.8594 225.4463 423.1963 226.4111 423.1963 c227.4463 423.1963 228.3076 422.8154 228.9971 422.0532 C229.5967 421.3848 229.8975 420.6191 229.8975 419.7505 c229.8975 419.7505 ls1 D228.335 419.7256 m228.335 420.2441 228.1553 420.6753 227.7979 421.019 C227.4365 421.3623 226.9795 421.5347 226.4189 421.5347 c225.8447 421.5347 225.3779 421.3643 225.0225 421.0249 c224.667 420.6851 224.4873 420.2544 224.4873 419.7319 c224.4873 419.2114 224.6689 418.7783 225.0283 418.4307 C225.3877 418.085 225.8545 417.9126 226.4189 417.9126 c226.9873 417.9126 227.4482 418.083 227.8037 418.4224 C228.1572 418.7617 228.335 419.1973 228.335 419.7256 c228.335 419.7256 ls0 D232.2959 410.8198 m232.2959 409.1587 L223.1006 409.1587 L223.1006 410.8198 L223.8057 410.8198 L223.499 411.1445 223.2783 411.4717 223.1436 411.7988 C223.0068 412.1255 222.9385 412.4814 222.9385 412.8623 c222.9385 413.7222 223.2686 414.4634 223.9346 415.0898 C224.5967 415.7163 225.4189 416.0288 226.4053 416.0288 c227.4268 416.0288 228.2646 415.7246 228.9189 415.1187 C229.5693 414.5132 229.8975 413.7783 229.8975 412.9121 c229.8975 412.5127 229.8213 412.1396 229.6748 411.79 C229.5244 411.4404 229.2979 411.1177 229.001 410.8198 C232.2959 410.8198 L232.2959 410.8198 Ls1 D228.374 412.5708 m228.374 413.0869 228.1904 413.5156 227.8271 413.8555 C227.4639 414.1963 226.999 414.3677 226.4307 414.3677 c225.8584 414.3677 225.3877 414.1948 225.0166 413.8472 C224.6475 413.499 224.4639 413.0723 224.4639 412.5645 c224.4639 412.042 224.6436 411.6069 225.0088 411.2632 C225.3701 410.918 225.8467 410.7446 226.4365 410.7446 c227.0127 410.7446 227.4795 410.918 227.8369 411.2632 c228.1943 411.6069 228.374 412.0439 228.374 412.5708 c228.374 412.5708 ls0 D225.9482 401.6978 m225.9482 407.0376 L225.4775 406.9604 225.0986 406.7544 224.8193 406.4214 C224.5381 406.0879 224.3994 405.6616 224.3994 405.1445 c224.3994 404.5244 224.6201 403.9937 225.0557 403.5483 C224.3955 402.1538 L223.8994 402.501 223.5342 402.9194 223.2939 403.4048 C223.0576 403.8916 222.9385 404.4688 222.9385 405.1367 c222.9385 406.1738 223.2646 407.019 223.9209 407.6704 C224.5752 408.3218 225.3955 408.6494 226.3799 408.6494 c227.3896 408.6494 228.2295 408.3218 228.8955 407.6704 C229.5635 407.019 229.8975 406.2031 229.8975 405.2178 c229.8975 404.1748 229.5635 403.3257 228.8994 402.6714 C228.2334 402.0181 227.3564 401.6909 226.2627 401.6909 C225.9482 401.6978 L225.9482 401.6978 Ls1 D227.249 403.353 m227.6104 403.4629 227.9053 403.6792 228.1338 404.0024 C228.3604 404.3267 228.4717 404.7017 228.4717 405.1309 c228.4717 405.5947 228.3447 406.0005 228.0889 406.3525 C227.9307 406.5713 227.6494 406.7749 227.249 406.9629 C227.249 403.353 L227.249 403.353 Ls228.7939 397.1348 m229.1494 397.3989 229.4209 397.7192 229.6123 398.0981 C229.7998 398.4795 229.8975 398.8828 229.8975 399.3145 c229.8975 399.9434 229.7119 400.459 229.3408 400.8633 c228.9697 401.2671 228.5225 401.4688 227.999 401.4688 c227.1904 401.4688 226.5146 400.9316 225.9756 399.8574 c225.6943 399.2979 L225.4541 398.8125 225.2041 398.5708 224.9482 398.5708 c224.8096 398.5708 224.6904 398.6377 224.583 398.7729 C224.4775 398.9063 224.4248 399.0854 224.4248 399.3042 c224.4248 399.5078 224.4951 399.7407 224.6357 400.0034 C224.7744 400.2676 224.96 400.4971 225.1885 400.6924 C224.0713 401.7183 L223.3154 401.1426 222.9385 400.3677 222.9385 399.4019 c222.9385 398.6733 223.1338 398.0918 223.5283 397.6592 C223.9189 397.2261 224.4092 397.0093 224.9971 397.0093 c225.4385 397.0093 225.8232 397.1284 226.1514 397.3677 C226.4775 397.6069 226.7998 398.0483 227.1143 398.6895 C227.4189 399.2979 L227.5498 399.562 227.6514 399.7285 227.7275 399.7949 C227.8018 399.8618 227.8838 399.895 227.9736 399.895 c228.0889 399.895 228.1865 399.8428 228.2666 399.7368 C228.3447 399.6309 228.3857 399.4844 228.3857 399.2993 c228.3857 398.9585 228.1768 398.5791 227.7607 398.1631 C228.7939 397.1348 L228.7939 397.1348 Ls0 D232.4561 395.8921 m232.4561 395.6006 232.3506 395.3511 232.1416 395.1426 C231.9307 394.9326 231.6768 394.8281 231.376 394.8281 c231.0811 394.8281 230.8291 394.9326 230.6201 395.1387 C230.4131 395.3442 230.3096 395.5923 230.3096 395.8813 c230.3096 396.1772 230.415 396.4292 230.626 396.6372 C230.8389 396.8477 231.0967 396.9517 231.4014 396.9517 c231.6924 396.9517 231.9404 396.8477 232.1455 396.6411 c232.3525 396.4355 232.4561 396.186 232.4561 395.8921 c232.4561 395.8921 ls229.7334 396.7271 m229.7334 395.0659 L223.1006 395.0659 L223.1006 396.7271 L229.7334 396.7271 L229.7334 396.7271 Ls229.7334 389.4907 m229.7334 387.8418 L224.0596 387.8418 l222.9385 387.8418 222.1143 388.0688 221.5889 388.5205 C220.874 389.126 220.5146 390.0405 220.5146 391.2622 c220.5146 391.9121 220.5967 392.4595 220.7588 392.9053 C220.9209 393.3481 221.1611 393.7231 221.4775 394.0269 C221.792 394.333 222.1748 394.5596 222.626 394.7061 C222.626 392.8633 L222.4404 392.7007 222.3018 392.4912 222.2061 392.2324 C222.1123 391.9766 222.0635 391.6724 222.0635 391.3208 c222.0635 390.8711 222.1318 390.5107 222.2705 390.2378 C222.4072 389.9629 222.585 389.7715 222.8018 389.6597 C223.0205 389.5469 223.3936 389.4907 223.9268 389.4907 C223.6338 389.7842 223.4209 390.0923 223.2939 390.415 C223.165 390.7378 223.1006 391.1021 223.1006 391.5098 c223.1006 392.4033 223.4209 393.1592 224.0635 393.7749 C224.7041 394.3911 225.5166 394.6997 226.499 394.6997 c227.5498 394.6997 228.3955 394.3726 229.0322 393.7212 C229.6084 393.1279 229.8975 392.4219 229.8975 391.6016 c229.8975 391.2188 229.8252 390.8564 229.6865 390.5146 C229.5459 390.1758 229.3154 389.834 228.9951 389.4907 C229.7334 389.4907 L229.7334 389.4907 Ls1 D228.335 391.2334 m228.335 391.7603 228.1592 392.1953 227.8096 392.5366 C227.46 392.8799 227.0225 393.0508 226.4932 393.0508 c225.9424 393.0508 225.4893 392.876 225.1396 392.5239 C224.7861 392.1748 224.6123 391.7329 224.6123 391.2021 c224.6123 390.6836 224.7842 390.2568 225.1299 389.9194 C225.4717 389.5845 225.9209 389.4155 226.4795 389.4155 c227.0303 389.4155 227.4756 389.5845 227.8174 389.9238 C228.1611 390.2632 228.335 390.6982 228.335 391.2334 c228.335 391.2334 ls0 D229.7334 387.02 m229.7334 385.3589 L229.0518 385.3589 L229.3682 384.9819 229.5869 384.6382 229.7119 384.3325 C229.835 384.0259 229.8975 383.7119 229.8975 383.3911 c229.8975 382.7334 229.667 382.1733 229.21 381.7153 C228.8174 381.3306 228.2412 381.1362 227.4795 381.1362 c223.1006 381.1362 L223.1006 382.7852 L226.001 382.7852 l226.792 382.7852 227.3174 382.8208 227.5752 382.8916 C227.835 382.9624 228.0322 383.0874 228.1689 383.2622 C228.3037 383.439 228.374 383.6577 228.374 383.916 c228.374 384.2529 228.2607 384.5425 228.0342 384.7837 c227.8096 385.0254 227.4971 385.1924 227.1025 385.2856 C226.8936 385.3335 226.4463 385.3589 225.7568 385.3589 c223.1006 385.3589 L223.1006 387.02 L229.7334 387.02 L229.7334 387.02 Ls224.8506 379.4717 m224.8506 379.207 224.7568 378.9814 224.5732 378.7949 C224.3877 378.6094 224.1611 378.5156 223.8975 378.5156 c223.6318 378.5156 223.4072 378.6094 223.2197 378.7949 C223.0322 378.9814 222.9385 379.207 222.9385 379.4717 c222.9385 379.7354 223.0322 379.9609 223.2197 380.1475 C223.4072 380.3335 223.6318 380.4272 223.8975 380.4272 c224.1611 380.4272 224.3877 380.3335 224.5732 380.1475 C224.7568 379.9609 224.8506 379.7354 224.8506 379.4717 c224.8506 379.4717 ls228.3857 371.2412 m227.6221 372.624 L227.8955 372.8857 228.083 373.1416 228.1904 373.3955 c228.2959 373.6494 228.3467 373.9463 228.3467 374.2881 c228.3467 374.9111 228.1611 375.415 227.7939 375.7979 c227.4229 376.1826 226.9502 376.374 226.3721 376.374 c225.8096 376.374 225.3525 376.1885 224.9971 375.8213 C224.6396 375.4502 224.4639 374.9658 224.4639 374.3643 c224.4639 373.6201 224.7158 373.042 225.2236 372.624 C224.3252 371.3154 L223.4014 372.0283 222.9385 373.0303 222.9385 374.3271 c222.9385 375.4951 223.2842 376.4092 223.9736 377.0693 C224.6631 377.7295 225.4678 378.0596 226.3916 378.0596 c227.0342 378.0596 227.6221 377.9004 228.1611 377.5801 C228.7021 377.2559 229.126 376.8086 229.4346 376.2334 C229.7412 375.6592 229.8975 375.0146 229.8975 374.3037 c229.8975 373.6436 229.7646 373.0518 229.5029 372.5264 c229.2393 372.0029 228.8682 371.5732 228.3857 371.2412 C228.3857 371.2412 Ls228.3857 364.0986 m227.6221 365.4814 L227.8955 365.7432 228.083 365.999 228.1904 366.2529 c228.2959 366.5068 228.3467 366.8037 228.3467 367.1455 c228.3467 367.7686 228.1611 368.2725 227.7939 368.6553 c227.4229 369.04 226.9502 369.2314 226.3721 369.2314 c225.8096 369.2314 225.3525 369.0459 224.9971 368.6787 C224.6396 368.3076 224.4639 367.8232 224.4639 367.2217 c224.4639 366.4775 224.7158 365.8994 225.2236 365.4814 C224.3252 364.1729 L223.4014 364.8857 222.9385 365.8877 222.9385 367.1846 c222.9385 368.3525 223.2842 369.2666 223.9736 369.9268 C224.6631 370.5869 225.4678 370.9189 226.3916 370.9189 c227.0342 370.9189 227.6221 370.7588 228.1611 370.4365 C228.7021 370.1143 229.126 369.667 229.4346 369.0908 C229.7412 368.5166 229.8975 367.8721 229.8975 367.1611 c229.8975 366.501 229.7646 365.9092 229.5029 365.3838 c229.2393 364.8604 228.8682 364.4307 228.3857 364.0986 Cs*U*u257.085 376.2939 m243.7217 376.2939 237.2158 384.4668 234.3213 394.1328 C245.2969 395.5454 257.7725 400.792 269.3838 401.6372 C274.7813 397.8184 283.8994 392.2153 289.9033 391.4316 C285.1875 393.7749 275.6094 398.4951 271.6289 402.1792 C274.6963 402.8711 279.2656 403.0098 284.8184 402.8125 C289.2773 399.9546 294.4063 398.2446 299.2324 397.0347 C294.9629 398.4575 291.5664 400.7617 287.3193 402.7109 C294.2207 402.3784 301.7217 401.6152 307.4102 400.8618 C300.8857 402.459 294.7959 403.4033 289 403.8643 C289.2998 404.021 289.541 404.2769 289.6777 404.5879 C294.6172 404.6035 L294.8467 404.0708 295.3779 403.6987 295.9941 403.7007 c296.8184 403.7031 297.4844 404.373 297.4824 405.1978 c297.4814 405.2275 L301.6729 403.3589 305.8857 401.8286 310.0166 400.9658 C292.2891 394.6235 270.4463 376.2939 257.085 376.2939 c257.085 376.2939 ls1 D287.4395 403.978 m287.0645 404.2476 286.8193 404.688 286.8184 405.1851 c286.8174 405.6313 287.0117 406.0317 287.3213 406.3071 C287.4619 406.4458 287.6367 406.5522 287.8457 406.6084 C287.9902 406.6558 288.1455 406.6821 288.3066 406.6826 c288.8027 406.6841 289.2441 406.4429 289.5166 406.0708 C289.5479 406.0449 289.5791 406.019 289.6104 405.9946 C294.7363 406.0049 L294.8223 406.1357 294.9268 406.2524 295.0469 406.3511 C292.4102 407.6055 289.791 408.9688 287.2139 410.3594 C287.2842 410.187 287.3232 409.9985 287.3232 409.8018 c287.3262 408.9771 286.6602 408.3066 285.835 408.3042 c285.6729 408.3037 285.5166 408.3291 285.3691 408.377 C283.3545 406.2749 L279.1094 406.2441 L277.0742 404.1758 L280.4443 404.2627 283.8887 404.21 287.4395 403.978 C287.4395 403.978 Ls273.9209 404.0527 m273.7109 404.1113 L274.7607 404.1221 L275.3105 404.2827 276.1914 405.3354 276.6221 405.7788 C277.2305 406.4043 277.9355 407.0151 278.4434 407.6499 C282.6846 407.6646 L283.0459 408.0015 283.876 408.7827 284.168 409.1362 C284.2705 409.2612 284.332 409.3735 284.3711 409.48 C284.3496 409.5806 284.3379 409.6851 284.3379 409.792 c284.3359 410.353 284.6436 410.8423 285.0996 411.0986 C285.1006 411.5098 L283.916 412.1597 282.7422 412.8105 281.5811 413.4546 C281.582 413.144 L282.0293 412.8872 282.332 412.4053 282.334 411.8525 c282.3359 411.0278 281.6699 410.3579 280.8457 410.355 c280.0205 410.3521 279.3506 411.019 279.3477 411.8433 c279.3467 412.4063 279.6563 412.8979 280.1162 413.1533 C280.1367 413.1865 280.1582 413.2202 280.1787 413.2563 C280.1758 414.2339 L278.9873 414.8916 277.8145 415.5381 276.6602 416.1641 C276.6631 416.0005 L277.125 415.7476 277.4404 415.2583 277.4424 414.6938 c277.4434 414.2441 277.2461 413.8408 276.9326 413.5654 C276.9072 413.5439 L276.8965 413.5352 L276.8516 413.4995 L276.6025 413.3105 276.291 413.1973 275.9541 413.1963 c275.1289 413.1934 274.459 413.8604 274.457 414.6851 c274.4551 415.2666 274.7861 415.7715 275.2705 416.0195 C275.374 416.3438 L275.3818 416.4292 275.373 416.688 275.3682 416.8599 C273.6641 417.7705 272.0049 418.6274 270.3984 419.3999 C270.4531 417.6411 270.3145 417.8071 269.0625 416.5464 C264.7939 412.2974 L264.7891 409.4746 L265.0215 408.9624 266.9414 407.0483 267.4385 406.8999 C271.9258 406.9121 L272.1816 407.3599 272.6641 407.6621 273.2178 407.6641 c274.042 407.6665 274.7119 407.0005 274.7148 406.1758 c274.7178 405.3511 274.0508 404.6812 273.2266 404.6782 c272.6289 404.6768 272.1123 405.0254 271.873 405.5313 C266.459 405.5225 L263.4053 408.6543 L263.3818 412.7373 L268.9434 418.335 L268.9434 420.0835 L268.5527 420.2622 268.165 420.4351 267.7813 420.6016 C266.7061 421.1543 265.6094 421.6099 264.5 421.9785 C264.5078 419.1948 L264.5215 419.1768 L264.9863 418.9253 265.3037 418.4336 265.3047 417.8672 c265.3076 417.0425 264.6416 416.3726 263.8164 416.3701 c262.9922 416.3672 262.3223 417.0337 262.3203 417.8584 c262.3174 418.4204 262.6279 418.9111 263.0859 419.167 C263.1035 419.1904 L263.0957 422.3979 L262.2627 422.6172 261.4248 422.7871 260.5859 422.9111 C260.583 411.3042 L261.9814 409.9458 L262.0166 402.9321 L265.9297 403.4478 269.8779 403.8447 273.9209 404.0527 C273.9209 404.0527 Ls260.6143 402.7422 m260.585 409.4873 L259.1777 410.8374 L259.1338 423.0806 L258.6699 423.1201 258.2051 423.1475 257.7432 423.1592 C257.7715 414.541 L258.2334 414.2871 258.5439 413.7983 258.5469 413.2363 c258.5488 412.4116 257.8838 411.7412 257.0586 411.7388 c256.2334 411.7358 255.5635 412.4019 255.5615 413.2266 c255.5586 413.7979 255.8779 414.2944 256.3486 414.5474 C256.3682 414.5825 L256.3408 422.7725 L255.9805 423.1372 L250.8994 422.8926 246.002 421.043 242.0889 418.0195 C251.8857 418.0483 L254.9512 414.9194 L254.9854 411.2813 L258.4258 407.8965 L258.4873 402.436 L259.1953 402.5415 259.9053 402.6436 260.6143 402.7422 C260.6143 402.7422 Ls257.1172 402.2285 m257.0869 407.2847 L253.5967 410.8403 L253.5596 414.3647 L251.3105 416.6411 L240.4443 416.6245 L235.6084 412.1279 232.7451 405.6382 233.7764 398.1846 C235.6768 398.4995 237.5537 398.8247 239.415 399.1543 C239.3994 400.6294 L238.4307 401.6558 L238.2881 401.6094 238.1338 401.584 237.9756 401.5835 c237.1514 401.5811 236.4795 402.2476 236.4775 403.0713 c236.4756 403.8955 237.1416 404.5664 237.9658 404.5693 c238.79 404.5713 239.4609 403.9053 239.4639 403.0806 c239.4639 402.981 239.4541 402.8828 239.4365 402.7881 C239.8193 402.3965 240.3877 401.7671 240.7461 401.4536 C240.7783 399.4775 L240.7852 399.4775 L240.7861 399.3979 L240.9023 399.4194 246.8223 400.2949 245.416 400.2905 C245.3828 405.3423 L244.126 406.6011 L242.5107 406.5884 L241.4209 406.585 240.3311 406.5801 239.2432 406.5781 C239.1221 406.5537 239.0215 406.5146 238.9326 406.4663 C238.667 406.0625 238.2109 405.7954 237.6904 405.7939 c236.8662 405.791 236.1943 406.4575 236.1924 407.2817 c236.1904 408.1064 236.8564 408.7769 237.6816 408.7793 c238.2666 408.7813 238.7744 408.4458 239.0205 407.9565 C244.8398 407.9741 L246.8242 406.0981 L246.7998 400.4795 L247.9121 400.6782 249.0195 400.8755 250.126 401.0688 C250.1064 406.4727 L248.002 408.6104 L247.9756 410.8525 L247.1006 411.7573 L246.4834 411.7427 L246.2314 411.2739 245.7393 410.9536 245.1689 410.9517 c244.3447 410.9497 243.6748 411.6157 243.6719 412.4404 c243.6689 413.2646 244.335 413.9351 245.1602 413.938 c245.748 413.9395 246.2588 413.6001 246.5029 413.1055 C247.5049 413.1411 L249.3701 411.3062 L249.457 409.2729 L251.4492 407.2998 L251.4932 401.3062 L251.9648 401.3872 252.4365 401.4673 252.9072 401.5469 C252.8975 403.4805 252.9102 405.4165 252.8984 407.3486 C250.7832 409.5869 L250.7646 412.6929 L250.4775 413.0669 L250.3525 413.0327 250.2207 413.0137 250.0859 413.0132 c249.2607 413.0112 248.5908 413.6772 248.5879 414.502 c248.5859 415.3262 249.252 415.9966 250.0762 415.9995 c250.9014 416.002 251.5713 415.3354 251.5742 414.5112 c251.5742 414.3633 251.5527 414.2212 251.5137 414.0869 C252.1582 413.5117 L252.1855 409.8755 L254.2256 407.8838 L254.2852 401.7759 L255.2285 401.9312 256.1719 402.0825 257.1172 402.2285 C257.1172 402.2285 Ls0 D238.9893 412.0542 m238.6191 413.9478 241.3965 414.3979 241.71 412.6484 C242.0557 410.728 239.3135 410.3882 238.9893 412.0542 C238.9893 412.0542 Ls240.3701 413.0005 m240.6729 413.0015 240.918 412.7568 240.9189 412.4551 c240.9189 412.1528 240.6758 411.9067 240.374 411.9063 c240.0723 411.9053 239.8252 412.1494 239.8252 412.4517 c239.8252 412.7534 240.0684 412.999 240.3701 413.0005 c240.3701 413.0005 ls1 D296.0547 405.8188 m295.7529 405.8184 295.5088 405.5723 295.5098 405.27 c295.5107 404.9683 295.7559 404.7241 296.0576 404.7251 c296.3604 404.7261 296.6035 404.9722 296.6025 405.2734 c296.6025 405.5757 296.3564 405.8198 296.0547 405.8188 c296.0547 405.8188 ls288.3164 405.7544 m288.0137 405.7534 287.7695 405.5078 287.7705 405.2056 c287.7715 404.9033 288.0166 404.6597 288.3193 404.6606 c288.6211 404.6616 288.8652 404.9067 288.8643 405.209 c288.8633 405.5112 288.6182 405.7554 288.3164 405.7544 c288.3164 405.7544 ls0 D273.2256 406.7568 m273.5273 406.7583 273.7725 406.5137 273.7734 406.2119 c273.7744 405.9097 273.5313 405.6646 273.2285 405.6631 c272.9268 405.6626 272.6807 405.9063 272.6807 406.2085 c272.6787 406.5107 272.9238 406.7563 273.2256 406.7568 c273.2256 406.7568 ls263.8291 418.4375 m264.1318 418.4385 264.377 418.1943 264.3789 417.8921 c264.3789 417.5898 264.1348 417.3442 263.832 417.3433 c263.5303 417.3428 263.2852 417.5864 263.2842 417.8887 c263.2832 418.1904 263.5273 418.4365 263.8291 418.4375 c263.8291 418.4375 ls275.9541 415.2334 m276.2559 415.2344 276.502 414.9907 276.502 414.6885 c276.5039 414.3862 276.2598 414.1411 275.958 414.1401 c275.6563 414.1387 275.4102 414.3828 275.4092 414.6851 c275.4082 414.9868 275.6523 415.2324 275.9541 415.2334 c275.9541 415.2334 ls257.0361 413.7974 m257.3389 413.7983 257.584 413.5537 257.585 413.252 c257.5869 412.9497 257.3428 412.7041 257.04 412.7031 c256.7383 412.7026 256.4932 412.9468 256.4922 413.249 c256.4922 413.5508 256.7354 413.7964 257.0361 413.7974 c257.0361 413.7974 ls285.8555 410.3213 m286.1572 410.3218 286.4023 410.0776 286.4043 409.7754 c286.4043 409.4741 286.1611 409.228 285.8594 409.2271 c285.5566 409.2266 285.3115 409.4707 285.3096 409.772 c285.3096 410.0742 285.5537 410.3198 285.8555 410.3213 c285.8555 410.3213 ls280.8652 412.4131 m281.168 412.4136 281.4131 412.1694 281.4141 411.8677 c281.415 411.5654 281.1709 411.3198 280.8691 411.3193 c280.5674 411.3179 280.3213 411.562 280.3203 411.8638 c280.3193 412.166 280.5635 412.4116 280.8652 412.4131 c280.8652 412.4131 ls271.8125 416.1084 m272.6367 416.1108 273.3076 415.4448 273.3096 414.6206 c273.3125 413.7959 272.6455 413.125 271.8213 413.1226 c270.9971 413.1201 270.3262 413.7861 270.3242 414.6108 c270.3213 415.4355 270.9883 416.106 271.8125 416.1084 c271.8125 416.1084 ls271.7813 415.1802 m272.083 415.1807 272.3291 414.937 272.3301 414.6353 c272.3311 414.3325 272.0869 414.0874 271.7842 414.0859 c271.4824 414.0854 271.2373 414.3296 271.2354 414.6313 c271.2354 414.9336 271.4795 415.1787 271.7813 415.1802 c271.7813 415.1802 ls276.5098 411.022 m277.0742 410.811 277.4756 410.2671 277.4775 409.6294 c277.4805 408.8047 276.8145 408.1343 275.9893 408.1318 c275.374 408.1299 274.8428 408.502 274.6133 409.0347 C269.6738 409.0195 L269.4424 408.4961 268.9209 408.1299 268.3125 408.1279 c267.4873 408.126 266.8174 408.792 266.8145 409.6167 c266.8135 410.0625 267.0078 410.4634 267.3174 410.7378 C267.458 410.8774 267.6328 410.9839 267.8418 411.0396 C267.9863 411.0869 268.1416 411.1133 268.3027 411.1138 c268.7998 411.1152 269.2393 410.874 269.5127 410.502 C269.5439 410.4756 269.5752 410.4507 269.6064 410.4263 C274.7324 410.436 L274.8311 410.5889 274.958 410.7227 275.1045 410.8301 C275.3789 411.0522 275.7461 411.1899 276.2891 411.0928 C276.3623 411.0786 276.4365 411.0552 276.5098 411.022 C276.5098 411.022 Ls268.3115 410.186 m268.6143 410.1865 268.8594 409.9424 268.8613 409.6401 c268.8613 409.3384 268.6172 409.0928 268.3154 409.0923 c268.0127 409.0908 267.7676 409.3354 267.7666 409.6372 c267.7656 409.939 268.0098 410.1846 268.3115 410.186 c268.3115 410.186 ls276.0508 410.25 m276.3535 410.251 276.5986 410.0073 276.5986 409.7056 c276.6006 409.4028 276.3564 409.1572 276.0537 409.1567 c275.752 409.1558 275.5068 409.3994 275.5049 409.7017 c275.5049 410.0034 275.748 410.249 276.0508 410.25 c276.0508 410.25 ls250.0635 415.1123 m250.3662 415.1133 250.6113 414.8701 250.6123 414.5674 c250.6133 414.2651 250.3701 414.02 250.0674 414.019 c249.7646 414.0181 249.5195 414.2622 249.5186 414.564 c249.5176 414.8662 249.7607 415.1113 250.0635 415.1123 c250.0635 415.1123 ls1 D237.9541 403.6831 m237.6533 403.6821 237.4082 403.436 237.4092 403.1343 c237.4111 402.832 237.6553 402.5879 237.958 402.5889 c238.2588 402.5898 238.5049 402.8359 238.5029 403.1377 c238.501 403.4399 238.2568 403.6841 237.9541 403.6831 c237.9541 403.6831 ls0 D245.168 412.9502 m245.4707 412.9507 245.7158 412.707 245.7168 412.4048 c245.7178 412.1025 245.4727 411.8574 245.1719 411.8564 c244.8691 411.8555 244.625 412.0991 244.623 412.4014 c244.6221 412.7036 244.8652 412.9492 245.168 412.9502 c245.168 412.9502 ls237.6494 407.873 m237.9521 407.8735 238.1963 407.6294 238.1982 407.3276 c238.1982 407.0254 237.9541 406.7803 237.6533 406.7793 c237.3506 406.7778 237.1045 407.022 237.1045 407.3247 c237.1025 407.6265 237.3467 407.8716 237.6494 407.873 cs*UUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF